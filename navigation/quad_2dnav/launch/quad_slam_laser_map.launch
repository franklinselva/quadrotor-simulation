<?xml version="1.0"?>

<launch>

  <!-- <env name="ROSCONSOLE_CONFIG_FILE" value="$(find quad_control)/custom_rosconsole.conf"/> -->

  <arg name="enable_logging" default="false"/>
  <arg name="enable_ground_truth" default="true"/>
  <arg name="log_file" default="quad"/>
  <arg name="headless" default="true"/>
  <arg name="gui" default="true"/>

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find quad_gazebo)/worlds/willowgarage.world"/>
    <!-- more default parameters can be changed here -->
    <arg name="debug" value="false" />
    <arg name="paused" value="true"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="gui" value="$(arg gui)"/>
  </include>

  <!-- Spawn 3DR Model -->
  <include file="$(find quad_gazebo)/launch/spawn/spawn_quad_kinect.launch">
    <arg name="model" value="$(find quad_description)/urdf/kit_c_base.xacro" />
    <arg name="enable_logging" value="$(arg enable_logging)" />
    <arg name="enable_ground_truth" value="$(arg enable_ground_truth)" />
    <arg name="log_file" value="$(arg log_file)"/>
  </include>

  <group ns="quad">
    <node name="joy_node" pkg="joy" type="joy_node" />
    <node name="quad_joystick_interface" pkg="quad_joystick_interface" type="quad_joystick_interface" output="screen"/>
    <node name="waypoint_node" pkg="quad_control" type="waypoint_publisher_node" output="screen"/>
  </group>
  <group ns="quad">
    <node name="position_controller_node" pkg="quad_control" type="position_controller_node" output="screen">
      <rosparam command="load" file="$(find quad_gazebo)/resource/kit_c.yaml" />
      <rosparam command="load" file="$(find quad_control)/resource/position_controller.yaml" />
    </node>
    <node name="attitude_controller_node" pkg="quad_control" type="attitude_controller_node" output="screen">
      <rosparam command="load" file="$(find quad_gazebo)/resource/kit_c.yaml" />
      <rosparam command="load" file="$(find quad_control)/resource/attitude_controller.yaml" />
    </node>
  </group>

  <!-- Fake laser -->
  <node pkg="nodelet" type="nodelet" name="laserscan_nodelet_manager" args="manager"/>
  <node pkg="nodelet" type="nodelet" name="depthimage_to_laserscan" args="load depthimage_to_laserscan/DepthImageToLaserScanNodelet laserscan_nodelet_manager">
    <param name="scan_height" value="10"/>
    <param name="scan_time" value="0.033"/>
    <param name="range_min" value="0.45"/>
    <param name="range_max" value="10.0"/>
    <param name="min_height" value=".10"/>
    <param name="max_height" value="2.0"/>
    <param name="output_frame_id" value="quad/camera__link"/>
    <remap from="image" to="/quad/camera_/depth/disparity"/>
    <remap from="/scan" to="/sim_scan"/>
  </node>

  <!-- Run OpenSlam's Gmapping to create 2-D Occupancy Grid Map -->
  <node name="slam_gmapping" pkg="gmapping" type="slam_gmapping">
    <remap from="scan" to="/sim_scan"/>
    <param name="odom_frame" value="world"/>
  </node>

  <!-- Visualisation RVIZ -->
  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find quad_description)/resource/quad_laser.rviz" output="screen"/>

</launch>
